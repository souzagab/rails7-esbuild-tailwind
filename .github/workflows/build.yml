name: Pull request workflow

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  RUBY_VERSION: 3.2
  GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
          POSTGRES_USER: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
      - name: Bundle install
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
      - name: Run RSpec
        env:
          RAILS_ENV: test
          DATABASE_URL: "postgres://postgres@localhost:5432/"
        run: |
          bundle exec rails db:setup
          bundle exec rspec

  linters:
    # Skip linters for dependabot PRs
    if: github.actor != 'dependabot[bot]' && github.actor != 'dependabot-preview[bot]'
    name: Run linters
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
      - name: rubocop
        uses: reviewdog/action-rubocop@v2
        with:
          github_token: ${{ env.GITHUB_TOKEN }}
          rubocop_version: gemfile
          reporter: github-pr-check
      - name: Reek
        uses: reviewdog/action-reek@v1
        with:
          github_token: ${{ env.GITHUB_TOKEN }}
          reek_version: gemfile
          reporter: github-pr-check
